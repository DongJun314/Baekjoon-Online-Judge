** 핵심 **
1. 핵심은 재귀 함수

------------------

#include <iostream>
#include <vector>
#include <limits.h>
 
using namespace std;
 
int n;
vector<vector<int>> vec(3, vector<int>(3));
vector<vector<int>> arr(3, vector<int>(3));
vector<bool> visited(10, false);
 
int ans = INT_MAX;
 
// 매직 스퀘어 확인
bool check()
{
    for (int i = 0; i < 3; i++)
    {
        int total = 0;
        for (int j = 0; j < 3; j++)
        {
            total += arr[i][j];
        }
 
        if (total != 15) return false;
    }
 
    for (int i = 0; i < 3; i++)
    {
        int total = 0;
        for (int j = 0; j < 3; j++)
        {
            total += arr[j][i];
        }
 
        if (total != 15) return false;
    }
 
    if (arr[0][0] + arr[1][1] + arr[2][2] != 15) return false;
    if (arr[0][2] + arr[1][1] + arr[2][0] != 15) return false;
 
    return true;
}
 
// cur이 2차원이므로 x, y로 대체된다.
void recur(int x, int y, int price)
{
    // 만약 y가 행의 끝에 도달했다면 
    if (y == 3)
    {
        x++;
        y = 0;
    }
 
    if (x == 3)
    {
        // 매직 스퀘어 확인
        if (!check()) return;
        ans = min(ans, price);
        return;
    }
 
    for (int i = 1; i < 10; i++)
    {
        // 중복수 제거 -> 해당 수를 사용했는지
        if (visited[i] == true) continue;
 
        visited[i] = true;
        arr[x][y] = i;
        recur(x, y + 1, price + abs(vec[x][y] - i));
        visited[i] = false;
    }
}
 
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
 
    // 입력 받기
    for (auto& ele : vec) for (int& e : ele) cin >> e;
 
    recur(0, 0, 0);
 
    cout << ans;
 
    return 0;
}

