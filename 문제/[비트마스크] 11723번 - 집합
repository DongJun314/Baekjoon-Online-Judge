** 핵심 **
1. 두가지 풀이법이 존재 -> int 배열을 통한 방법과 비트마스크을 통한 방법
2. 비트마스크의 방법 숙달 필요, "iS = (1 << 21) - 1" 이건 모든 비트를 1로 바꾸는 방법

---------------------------------------------------------------------------------

#include <iostream>
#include <string>
using namespace std;

int iM{ 0 }, iS{ 0 };

int main(void) {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr); cout.tie(nullptr);

	cin >> iM;

	for (int i = 0; i < iM; i++)
	{
		int iNum{ 0 };
		string strCommand;

		cin >> strCommand;
		
		if (strCommand == "add") {
			cin >> iNum;
			iS |= (1 << iNum);
		}
		else if (strCommand == "remove") {
			cin >> iNum;
			iS &= ~(1 << iNum);
		}
		else if (strCommand == "check") {
			cin >> iNum;
			if (iS & (1 << iNum)) {
				cout << 1 << '\n';
			} else {
				cout << 0 << '\n';
			}
		}
		else if (strCommand == "toggle") {
			cin >> iNum;
			iS ^= (1 << iNum);
		}
		else if (strCommand == "all") {
			iS = (1 << 21) - 1;
		}
		else if (strCommand == "empty") {
			iS = 0;
		}
	}

	return 0;
}
