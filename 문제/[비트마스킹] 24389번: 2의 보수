** 핵심 **
1. 이 문제의 핵심은 음수 기호 '-'가 컴퓨터 내부적으로 2의 보수로 처리 된다는 것을 인지해야한다.
2. N & 1 의미는 비트에서 제일 오른쪽 비트와 1과의 AND연산
3. N >>= 1 의미는 특정 비트를 오른쪽으로 1비트씩 민다, 제일 오른쪽에 있던 비트는 버려진다.

-----------------------------------------------------------------------------------------

#include <iostream>
using namespace std;

int iN{ 0 }, iM{ 0 }, iResult{ 0 };

int main(void) 
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);

    cin >> iN;
    
    // 음수 '-'는 컴퓨터 내부적으로 특정 수를 2의 보수로 만듬
    // 즉 iM은 결과적으로 iN의 2의 보수가 됌, 2의 보수는 비트를 반전 시킨 후  1을 더한다는 의미
    iM = -iN; 

    for (int i = 0; i < 32; i++)
    {
        if ((iM & 1) != (iN & 1))
            ++iResult;

        iM >>= 1, iN >>= 1;
    }

    cout << iResult;

    return 0;
}
